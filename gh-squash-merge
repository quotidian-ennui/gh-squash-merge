#!/usr/bin/env bash
set -eo pipefail

GH_REST_API_VERSION="X-GitHub-Api-Version: 2022-11-28"
GH_ACCEPT="Accept: application/vnd.github+json"
WORK_FILE=$(mktemp --tmpdir squash-merge-commit-msg.XXXXXX)

gh_api() {
  gh api -H "$GH_REST_API_VERSION" -H "$GH_ACCEPT" "$@"
}

cleanup() {
  if [[ -n "${WORK_FILE:-}" ]]; then
    rm -f "$WORK_FILE"
  fi
}

usage() {
  cat << EOF

Usage: gh squash-merge <pr-number>

Issues a squash merge on the PR number provided.

Required arguments
  <pr-number> The PR number to squash merge

Notes:
- The title of the commit is the title of the PR
- The PR body contains a section similar to the following which lets us autogenerate
  squash merge commit message

<!-- SQUASH_MERGE_START -->
- this forms the body of the commit message and could be multiple lines
but generally we tend towards
- doc: conventional commit messages
<!-- SQUASH_MERGE_END -->

EXAMPLES
gh squash-merge 811

EOF
 exit 1
}

write_commit_msg() {
  local gh_repo="$1"
  local pr_number="$2"
  gh_api "repos/$gh_repo/pulls/$pr_number" -q ".body" | awk '/SQUASH_MERGE_START/,/SQUASH_MERGE_END/' | grep -v "SQUASH_MERGE" > "$WORK_FILE"
  echo "$WORK_FILE"
}

trap cleanup 1 2 15

pr_number="$1"
gh_repo=$(gh repo view --json "nameWithOwner" -q ".nameWithOwner") || true

if [[ -n "${gh_repo:-}" && -z "${pr_number:-}" ]]; then
  echo "Sorry, need to be in a github repo and have a PR number"
  usage
fi

commit_msg_file=$(write_commit_msg "$gh_repo" "$pr_number")
title=$(gh_api "repos/$gh_repo/pulls/$pr_number" -q ".title")
gh pr merge "$pr_number" -d --squash -F "$commit_msg_file" --subject "$title"
cleanup